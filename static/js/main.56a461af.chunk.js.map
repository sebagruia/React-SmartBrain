{"version":3,"sources":["components/Navigation/SmartBrain.png","components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","className","style","backgroundColor","href","options","max","height","width","src","SmartBrain","alt","type","id","Button","onClick","variant","ImageLinkForm","onInputChange","onDetectButton","Form","Group","Label","InputGroup","Prepend","Control","onChange","FaceRecognition","imageUrl","box","map","boxitem","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","name","entries","letterArray","split","letter","index","toUpperCase","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSignInButton","preventDefault","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","window","alert","this","Card","text","Body","border","Title","controlId","placeholder","required","Text","React","Component","Register","onNameInput","onEmailInput","onPasswordInput","onRegisterButton","particleOptions","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFaceArray","outputs","regions","boundingBoxArray","image","document","getElementById","Number","face","percentageCoordinates","region_info","bounding_box","pixelCoordinates","left_col","top_row","right_col","bottom_row","push","displayBoxOnImage","widthWindowDetection","innerWidth","particles","number","countData","Object","assign","catch","err","console","log","params","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56a461af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SmartBrain.8c1dff59.png\";","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tilt from 'react-tilt';\r\nimport './Navigation.css';\r\nimport SmartBrain from './SmartBrain.png';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    \r\n    if (isSignedIn) {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light sticky-top\" style={{ backgroundColor: \"#e3f2fd\" }}>\r\n                <a className=\"navbar-brand\" href=\" home\">\r\n                    <Tilt className=\"Tilt\" options={{ max: 35 }} style={{ height: 110, width: 110 }} >\r\n                        <div className=\"logo-div Tilt-inner\">\r\n                            <img src={SmartBrain} alt=\"a drawing of a brain\" />\r\n                            <p className=\"logoName\">SmartBrain</p>\r\n                        </div>\r\n                    </Tilt>\r\n                </a>\r\n                <button className=\"navbar-toggler text-secondary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto \">\r\n                        <li className=\"nav-item \">\r\n                            <Button onClick={() => {\r\n                                 onRouteChange('SignIn')}}  \r\n                                className=\"my-button  text-secondary\" variant=\"link\" ><i className=\"fas fa-sign-out-alt \"><span className=\"font-family-custom\">Sign out</span></i></Button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light sticky-top\" style={{ backgroundColor: \"#e3f2fd\" }}>\r\n                <a className=\"navbar-brand\" href=\"#home\">\r\n                    <Tilt className=\"Tilt\" options={{ max: 35 }} style={{ height: 110, width: 110 }} >\r\n                        <div className=\"logo-div Tilt-inner\">\r\n                            <img src={SmartBrain} alt=\"a drawing of a brain\" />\r\n                            <p className=\"logoName\">SmartBrain</p>\r\n                        </div>\r\n                    </Tilt>\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto \">\r\n                        <li className=\"nav-item \">\r\n                            <Button onClick={() => onRouteChange('SignIn')} className=\"my-button buttons-margin  text-secondary\" variant=\"link\"><i className=\"fas fa-sign-in-alt\"><span className=\"font-family-custom\">Sign in</span></i></Button>\r\n                            <Button onClick={() => onRouteChange('Register')} className=\"my-button buttons-margin  text-secondary \" variant=\"link\"><i className=\"fas fa-user-plus\"><span className=\"font-family-custom\">Register</span></i></Button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport './ImageLinkForm.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\nconst ImageLinkForm = ({onInputChange, onDetectButton})=>{\r\n    return(\r\n        <Form className=\"form-div  justify-content-center\">\r\n            <Form.Group className=\"formBasic\">\r\n                <Form.Label className=\"form-label\">SmartBrain will detect faces in your pictures --- Enter the link to an image below</Form.Label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <Button className=\"detect-button\" variant=\"light\" onClick={onDetectButton}>Detect</Button>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" className=\"browse-form\" onChange={onInputChange}/>\r\n                </InputGroup>\r\n            </Form.Group>\r\n        </Form>\r\n        \r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\n\r\nconst FaceRecognition = ({imageUrl,box})=>{\r\n    return(\r\n        <div className=\"overall-container m-auto\" >\r\n        <div className=\"img-container m-auto\">\r\n            <img src={imageUrl} id='inputImage' className=\"image-to-analyze\" alt=\"\"/>\r\n            {box.map((boxitem)=>{ \r\n                return (<div className=\"bounding-box\"  key={boxitem.id} style={{top:boxitem.topRow, right:boxitem.rightCol, bottom:boxitem.bottomRow, left:boxitem.leftCol}}>\r\n                </div>);\r\n            })\r\n            }\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank =({name, entries})=>{\r\n    let letterArray=[];\r\n    if(name){\r\n        letterArray = name.split('');\r\n    }\r\n   \r\n\r\n    return(\r\n        <div className=\"rank-text-container m-auto\">\r\n            <div className=\"foo d-flex justify-content-center\">\r\n                <div className=\"your-name\">\r\n                    {\r\n                         letterArray.map((letter, index)=>{\r\n                            return(\r\n                                <span key = {index} className=\"letter\" data-letter={letter.toUpperCase()}>{letter.toUpperCase()}</span>\r\n                            );\r\n                         })\r\n                    }\r\n                </div>\r\n                \r\n                <div className=\"your\">\r\n                    <span className=\"letter\" data-letter=\"-\">-</span>\r\n                    <span className=\"letter\" data-letter=\"Y\">Y</span>\r\n                    <span className=\"letter\" data-letter=\"O\">O</span>\r\n                    <span className=\"letter\" data-letter=\"U\">U</span>\r\n                    <span className=\"letter\" data-letter=\"R\">R</span>\r\n                </div>\r\n                \r\n                <div className=\"rank\">\r\n                    <span className=\"letter\" data-letter=\"R\">R</span>\r\n                    <span className=\"letter\" data-letter=\"A\">A</span>\r\n                    <span className=\"letter\" data-letter=\"N\">N</span>\r\n                    <span className=\"letter\" data-letter=\"K\">K</span>\r\n                </div>\r\n\r\n                <div className=\"is\">\r\n                    <span className=\"letter\" data-letter=\"I\">I</span>\r\n                    <span className=\"letter\" data-letter=\"S\">S</span>\r\n                    <span className=\"letter\" data-letter=\":\">:</span>\r\n                </div>\r\n              \r\n            </div>\r\n            <div className=\"number\">\r\n                    <span className=\"letter\" data-letter=\"#\">#</span>\r\n                    <span className=\"letter\" data-letter={entries}>{entries}</span>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Rank;","import React from \"react\";\r\nimport \"./SignIn.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass SignIn extends React.Component {\r\n  constructor({ props }) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSignInButton = (event) => {\r\n    event.preventDefault();\r\n    fetch(\"https://powerful-scrubland-05532.herokuapp.com/signIn\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((user) => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange(\"home\");\r\n        } else {\r\n          window.alert(\"No such User!!!\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <Card className=\"card-container m-auto\" text=\"light\">\r\n        <Card.Body border=\"light\">\r\n          <Card.Title>Sign In</Card.Title>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"label\">Email address</Form.Label>\r\n              <Form.Control\r\n                onChange={this.onEmailChange}\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                required\r\n              />\r\n              <Form.Text className=\"text-light\">\r\n                Don't worry I won't share your email, I'm not that guy.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label className=\"label\">Password</Form.Label>\r\n              <Form.Control\r\n                onChange={this.onPasswordChange}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <div className=\"button-wrapper\">\r\n              <Button\r\n                onClick={this.onSignInButton}\r\n                className=\"form-buttons\"\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Button\r\n                onClick={() => onRouteChange(\"Register\")}\r\n                variant=\"link\"\r\n                className=\"form-buttons register-button\"\r\n                type=\"submit\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport './Register.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  onRegisterButton = (event) => {\r\n    event.preventDefault()\r\n\r\n    fetch('https://powerful-scrubland-05532.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"card-container m-auto\" text=\"light\">\r\n        <Card.Body border=\"light\" >\r\n          <Card.Title>Register</Card.Title>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label className=\"label\">Name</Form.Label>\r\n              <Form.Control onChange={this.onNameInput} type=\"text\" placeholder=\"Enter Name\" required/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"label\">Email address</Form.Label>\r\n              <Form.Control onChange={this.onEmailInput} type=\"email\" placeholder=\"Enter email\" required/>\r\n              <Form.Text className=\"light\" >\r\n                Don't worry I won't share your email, I'm not that guy.\r\n            </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label className=\"label\">Password</Form.Label>\r\n              <Form.Control onChange={this.onPasswordInput} type=\"password\" placeholder=\"Password\" required/>\r\n            </Form.Group>\r\n            <Button onClick={this.onRegisterButton} variant=\"primary\" className=\"form-buttons\" type=\"submit\">Register</Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n    );\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\r\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\r\nimport Rank from '../components/Rank/Rank';\r\nimport SignIn from '../components/SignIn/SignIn';\r\nimport Register from '../components/Register/Register';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst particleOptions = {\r\n  \"particles\": {\r\n    \"number\": {\r\n      \"value\": 200\r\n    },\r\n    \"size\": {\r\n      \"value\": 3\r\n    },\r\n    \"density\": {\r\n      \"enable\": true,\r\n      \"value_area\": 800\r\n    },\r\n    \"move\": {\r\n      \"enable\": true,\r\n      \"speed\": 4,\r\n    }\r\n  },\r\n  \"interactivity\": {\r\n    \"onover\": {\r\n      \"enable\": true,\r\n      \"mode\": \"grab\"\r\n    }\r\n  },\r\n\r\n  \"retina_detect\": true\r\n};\r\n\r\nconst initialState ={\r\n  input: '',\r\n  imageUrl: '',\r\n  box: [],\r\n  route: 'SignIn',\r\n  isSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'SignIn') {\r\n      this.setState(initialState);\r\n    }\r\n    else if (route === 'home') {\r\n      this.setState({ isSignedIn: true });\r\n    }\r\n    this.setState({ route: route });\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFaceArray = data.outputs[0].data.regions;\r\n    let boundingBoxArray = [];\r\n    const image = document.getElementById('inputImage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    for (let face of clarifaiFaceArray) {\r\n      let percentageCoordinates = face.region_info.bounding_box;\r\n      let idBoundingBox = face.id;\r\n      let pixelCoordinates = {\r\n        id: idBoundingBox,\r\n        leftCol: percentageCoordinates.left_col * width,\r\n        topRow: percentageCoordinates.top_row * height,\r\n        rightCol: width - (percentageCoordinates.right_col * width),\r\n        bottomRow: height - (percentageCoordinates.bottom_row * height)\r\n      };\r\n      boundingBoxArray.push(pixelCoordinates);\r\n    }\r\n    return boundingBoxArray;\r\n  }\r\n\r\n  displayBoxOnImage = (box) => {\r\n    this.setState({ box: box });\r\n\r\n  }\r\n  // This functions reduces the number of particles displayed by the REACT-PARTICLE library according to the width of the browser. \r\n  //It's mainly purpose is for Responsivness of the site\r\n  widthWindowDetection = () => {\r\n    let innerWidthValue = window.innerWidth;\r\n    if (innerWidthValue < 450) {\r\n      particleOptions.particles.number.value = 50;\r\n\r\n    }\r\n  }\r\n  //---------------------------------------------------------\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n\r\n  }\r\n\r\n  onDetectButton = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    if(this.state.input!==''){\r\n      fetch('https://powerful-scrubland-05532.herokuapp.com/imageUrl', {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          input: this.state.input\r\n        })\r\n  \r\n      })\r\n        .then(response=>response.json()) // because it's a Fetch we have to converting it to json\r\n        .then(response => {\r\n          if (response) {\r\n            fetch(' https://powerful-scrubland-05532.herokuapp.com/image', {\r\n              method: 'put',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({\r\n                id: this.state.user.id\r\n              })\r\n  \r\n            })\r\n              .then(response => response.json())\r\n              .then(countData => {\r\n                // this.setState({user:{entries:countData}}); //<-- This solution is not working \r\n                this.setState(Object.assign(this.state.user, {entries:countData})); // This Object.assign updates the target OBJECT (this.state.user) \r\n                                                                                      //with the source OBJECT ({entries:countDAta}) otherwise the whole object will have beed overwritten with\r\n                                                                                      //{user: {entries:countData}}\r\n              })\r\n              .catch(err=>console.log(`This is the problem ${err}`));\r\n          }\r\n          this.displayBoxOnImage(this.calculateFaceLocation(response));\r\n        })\r\n        .catch(err => { console.log(`HEYYYYY there is an ERROR - ${err}`) });\r\n\r\n\r\n    }\r\n    else{\r\n      window.alert('Please insert a link to your picture');\r\n    }\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    this.widthWindowDetection();\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\"\r\n          params={particleOptions}\r\n        />\r\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\r\n\r\n        {route === 'home' ?\r\n          <div>\r\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\r\n            <ImageLinkForm onInputChange={this.onInputChange} onDetectButton={this.onDetectButton} />\r\n            <FaceRecognition imageUrl={imageUrl} box={box} />\r\n          </div>\r\n          : (this.state.route === \"SignIn\"\r\n            ? <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\r\n            : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\r\n\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}