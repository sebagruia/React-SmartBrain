{"version":3,"sources":["components/Navigation/SmartBrain.png","components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","className","style","backgroundColor","href","options","max","height","width","src","SmartBrain","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","variant","ImageLinkForm","onInputChange","onDetectButton","Group","Label","Prepend","Control","onChange","FaceRecognition","imageUrl","box","map","boxitem","key","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Rank","name","entries","letterArray","split","letter","index","data-letter","toUpperCase","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSignInButton","preventDefault","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","window","alert","this","text","Body","border","Title","controlId","placeholder","required","Text","React","Component","Register","onNameInput","onEmailInput","onPasswordInput","onRegisterButton","particleOptions","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFaceArray","outputs","regions","boundingBoxArray","image","document","getElementById","Number","face","percentageCoordinates","region_info","bounding_box","pixelCoordinates","left_col","top_row","right_col","bottom_row","push","displayBoxOnImage","widthWindowDetection","innerWidth","particles","number","countData","Object","assign","catch","err","console","log","params","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c31ead0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SmartBrain.fca1f4f4.png\";","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tilt from 'react-tilt';\r\nimport './Navigation.css';\r\nimport SmartBrain from './SmartBrain.png';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    \r\n    if (isSignedIn) {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light sticky-top\" style={{ backgroundColor: \"#e3f2fd\" }}>\r\n                <a className=\"navbar-brand\" href=\" home\">\r\n                    <Tilt className=\"Tilt\" options={{ max: 35 }} style={{ height: 110, width: 110 }} >\r\n                        <div className=\"logo-div Tilt-inner\">\r\n                            <img src={SmartBrain} alt=\"a drawing of a brain\" />\r\n                            <p className=\"logoName\">SmartBrain</p>\r\n                        </div>\r\n                    </Tilt>\r\n                </a>\r\n                <button className=\"navbar-toggler text-secondary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto \">\r\n                        <li className=\"nav-item \">\r\n                            <Button onClick={() => {\r\n                                 onRouteChange('SignIn')}}  \r\n                                className=\"my-button  text-secondary\" variant=\"link\" ><i className=\"fas fa-sign-out-alt \"><span className=\"font-family-custom\">Sign out</span></i></Button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light sticky-top\" style={{ backgroundColor: \"#e3f2fd\" }}>\r\n                <a className=\"navbar-brand\" href=\"#home\">\r\n                    <Tilt className=\"Tilt\" options={{ max: 35 }} style={{ height: 110, width: 110 }} >\r\n                        <div className=\"logo-div Tilt-inner\">\r\n                            <img src={SmartBrain} alt=\"a drawing of a brain\" />\r\n                            <p className=\"logoName\">SmartBrain</p>\r\n                        </div>\r\n                    </Tilt>\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto \">\r\n                        <li className=\"nav-item \">\r\n                            <Button onClick={() => onRouteChange('SignIn')} className=\"my-button buttons-margin  text-secondary\" variant=\"link\"><i className=\"fas fa-sign-in-alt\"><span className=\"font-family-custom\">Sign in</span></i></Button>\r\n                            <Button onClick={() => onRouteChange('Register')} className=\"my-button buttons-margin  text-secondary \" variant=\"link\"><i className=\"fas fa-user-plus\"><span className=\"font-family-custom\">Register</span></i></Button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n\r\n        );\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport './ImageLinkForm.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\nconst ImageLinkForm = ({onInputChange, onDetectButton})=>{\r\n    return(\r\n        <Form className=\"form-div  justify-content-center\">\r\n            <Form.Group className=\"formBasic\">\r\n                <Form.Label className=\"form-label\">SmartBrain will detect faces in your pictures --- Enter the link to an image below</Form.Label>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <Button className=\"detect-button\" variant=\"light\" onClick={onDetectButton}>Detect</Button>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" className=\"browse-form\" onChange={onInputChange}/>\r\n                </InputGroup>\r\n            </Form.Group>\r\n        </Form>\r\n        \r\n    );\r\n\r\n\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\n\r\nconst FaceRecognition = ({imageUrl,box})=>{\r\n    return(\r\n        <div className=\"overall-container m-auto\" >\r\n        <div className=\"img-container m-auto\">\r\n            <img src={imageUrl} id='inputImage' className=\"image-to-analyze\" alt=\"\"/>\r\n            {box.map((boxitem)=>{ \r\n                return (<div className=\"bounding-box\"  key={boxitem.id} style={{top:boxitem.topRow, right:boxitem.rightCol, bottom:boxitem.bottomRow, left:boxitem.leftCol}}>\r\n                </div>);\r\n            })\r\n            }\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank =({name, entries})=>{\r\n    let letterArray=[];\r\n    if(name){\r\n        letterArray = name.split('');\r\n    }\r\n   \r\n\r\n    return(\r\n        <div className=\"rank-text-container m-auto\">\r\n            <div className=\"foo d-flex justify-content-center\">\r\n                <div className=\"your-name\">\r\n                    {\r\n                         letterArray.map((letter, index)=>{\r\n                            return(\r\n                                <span key = {index} className=\"letter\" data-letter={letter.toUpperCase()}>{letter.toUpperCase()}</span>\r\n                            );\r\n                         })\r\n                    }\r\n                </div>\r\n                \r\n                <div className=\"your\">\r\n                    <span className=\"letter\" data-letter=\"-\">-</span>\r\n                    <span className=\"letter\" data-letter=\"Y\">Y</span>\r\n                    <span className=\"letter\" data-letter=\"O\">O</span>\r\n                    <span className=\"letter\" data-letter=\"U\">U</span>\r\n                    <span className=\"letter\" data-letter=\"R\">R</span>\r\n                </div>\r\n                \r\n                <div className=\"rank\">\r\n                    <span className=\"letter\" data-letter=\"R\">R</span>\r\n                    <span className=\"letter\" data-letter=\"A\">A</span>\r\n                    <span className=\"letter\" data-letter=\"N\">N</span>\r\n                    <span className=\"letter\" data-letter=\"K\">K</span>\r\n                </div>\r\n\r\n                <div className=\"is\">\r\n                    <span className=\"letter\" data-letter=\"I\">I</span>\r\n                    <span className=\"letter\" data-letter=\"S\">S</span>\r\n                    <span className=\"letter\" data-letter=\":\">:</span>\r\n                </div>\r\n              \r\n            </div>\r\n            <div className=\"number\">\r\n                    <span className=\"letter\" data-letter=\"#\">#</span>\r\n                    <span className=\"letter\" data-letter={entries}>{entries}</span>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './SignIn.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n  constructor({props}){\r\n    super(props);\r\n    this.state = {\r\n      signInEmail:'',\r\n      signInPassword:''\r\n    }\r\n  }\r\n\r\n  onEmailChange = (event)=>{\r\n    this.setState({signInEmail:event.target.value});\r\n  }\r\n  onPasswordChange = (event)=>{\r\n    this.setState({signInPassword:event.target.value});\r\n  }\r\n\r\n  \r\n  onSignInButton = (event)=>{\r\n    event.preventDefault()\r\n      fetch('https://powerful-scrubland-05532.herokuapp.com/signIn', {\r\n        method:'post',\r\n        headers:{'Content-Type': 'application/json'},\r\n        body:JSON.stringify({\r\n          email:this.state.signInEmail,\r\n          password:this.state.signInPassword\r\n        })\r\n      })\r\n      .then(response=>response.json())\r\n      .then(user=>{\r\n        if(user.id){\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }else{\r\n          window.alert(\"No such User!!!\");\r\n        }\r\n      });\r\n  }\r\n\r\n  render(){\r\n    const {onRouteChange} = this.props;\r\n    return (\r\n      <Card className=\"card-container m-auto\" text=\"light\">\r\n      <Card.Body border=\"light\" >\r\n        <Card.Title>Sign In</Card.Title>\r\n          <Form>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"label\">Email address</Form.Label>\r\n              <Form.Control onChange = {this.onEmailChange} type=\"email\" placeholder=\"Enter email\" required />\r\n              <Form.Text className=\"light\" >\r\n                  Don't worry I won't share your email, I'm not that guy.\r\n              </Form.Text>\r\n              </Form.Group>\r\n          \r\n              <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label className=\"label\">Password</Form.Label>\r\n              <Form.Control onChange = {this.onPasswordChange} type=\"password\" placeholder=\"Password\" required/>\r\n              </Form.Group>\r\n              <div className=\"button-wrapper\">\r\n                <Button onClick={this.onSignInButton} className=\"form-buttons\" variant=\"primary\" type=\"submit\">Sign In</Button>\r\n                <Button  onClick={()=>onRouteChange('Register')} variant=\"link\"  className=\"form-buttons register-button\" type=\"submit\">Register</Button>\r\n              </div>\r\n           \r\n          </Form>\r\n      </Card.Body>\r\n    </Card>\r\n      \r\n   );\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './Register.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    }\r\n  }\r\n\r\n  onNameInput = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n  onEmailInput = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n  onPasswordInput = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  onRegisterButton = (event) => {\r\n    event.preventDefault()\r\n\r\n    fetch('https://powerful-scrubland-05532.herokuapp.com/register', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"card-container m-auto\" text=\"light\">\r\n        <Card.Body border=\"light\" >\r\n          <Card.Title>Register</Card.Title>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label className=\"label\">Name</Form.Label>\r\n              <Form.Control onChange={this.onNameInput} type=\"text\" placeholder=\"Enter Name\" required/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label className=\"label\">Email address</Form.Label>\r\n              <Form.Control onChange={this.onEmailInput} type=\"email\" placeholder=\"Enter email\" required/>\r\n              <Form.Text className=\"light\" >\r\n                Don't worry I won't share your email, I'm not that guy.\r\n            </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label className=\"label\">Password</Form.Label>\r\n              <Form.Control onChange={this.onPasswordInput} type=\"password\" placeholder=\"Password\" required/>\r\n            </Form.Group>\r\n            <Button onClick={this.onRegisterButton} variant=\"primary\" className=\"form-buttons\" type=\"submit\">Register</Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n    );\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation/Navigation';\nimport ImageLinkForm from '../components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from '../components/FaceRecognition/FaceRecognition';\nimport Rank from '../components/Rank/Rank';\nimport SignIn from '../components/SignIn/SignIn';\nimport Register from '../components/Register/Register';\nimport Particles from 'react-particles-js';\n\nconst particleOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 200\n    },\n    \"size\": {\n      \"value\": 3\n    },\n    \"density\": {\n      \"enable\": true,\n      \"value_area\": 800\n    },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 4,\n    }\n  },\n  \"interactivity\": {\n    \"onover\": {\n      \"enable\": true,\n      \"mode\": \"grab\"\n    }\n  },\n\n  \"retina_detect\": true\n};\n\nconst initialState ={\n  input: '',\n  imageUrl: '',\n  box: [],\n  route: 'SignIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n\n}\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'SignIn') {\n      this.setState(initialState);\n    }\n    else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFaceArray = data.outputs[0].data.regions;\n    let boundingBoxArray = [];\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    for (let face of clarifaiFaceArray) {\n      let percentageCoordinates = face.region_info.bounding_box;\n      let idBoundingBox = face.id;\n      let pixelCoordinates = {\n        id: idBoundingBox,\n        leftCol: percentageCoordinates.left_col * width,\n        topRow: percentageCoordinates.top_row * height,\n        rightCol: width - (percentageCoordinates.right_col * width),\n        bottomRow: height - (percentageCoordinates.bottom_row * height)\n      };\n      boundingBoxArray.push(pixelCoordinates);\n    }\n    return boundingBoxArray;\n  }\n\n  displayBoxOnImage = (box) => {\n    this.setState({ box: box });\n\n  }\n  // This functions reduces the number of particles displayed by the REACT-PARTICLE library according to the width of the browser. \n  //It's mainly purpose is for Responsivness of the site\n  widthWindowDetection = () => {\n    let innerWidthValue = window.innerWidth;\n    if (innerWidthValue < 450) {\n      particleOptions.particles.number.value = 50;\n\n    }\n  }\n  //---------------------------------------------------------\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n\n  }\n\n  onDetectButton = () => {\n    this.setState({ imageUrl: this.state.input });\n    if(this.state.input!==''){\n      fetch('https://powerful-scrubland-05532.herokuapp.com/imageUrl', {\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n  \n      })\n        .then(response=>response.json()) // because it's a Fetch we have to converting it to json\n        .then(response => {\n          if (response) {\n            fetch(' https://powerful-scrubland-05532.herokuapp.com/image', {\n              method: 'put',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n  \n            })\n              .then(response => response.json())\n              .then(countData => {\n                // this.setState({user:{entries:countData}}); //<-- This solution is not working \n                this.setState(Object.assign(this.state.user, {entries:countData})); // This Object.assign updates the target OBJECT (this.state.user) \n                                                                                      //with the source OBJECT ({entries:countDAta}) otherwise the whole object will have beed overwritten with\n                                                                                      //{user: {entries:countData}}\n              })\n              .catch(err=>console.log(`This is the problem ${err}`));\n          }\n          this.displayBoxOnImage(this.calculateFaceLocation(response));\n        })\n        .catch(err => { console.log(`HEYYYYY there is an ERROR - ${err}`) });\n\n\n    }\n    else{\n      window.alert('Please insert a link to your picture');\n    }\n   \n  }\n\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    this.widthWindowDetection();\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particleOptions}\n        />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n\n        {route === 'home' ?\n          <div>\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} onDetectButton={this.onDetectButton} />\n            <FaceRecognition imageUrl={imageUrl} box={box} />\n          </div>\n          : (this.state.route === \"SignIn\"\n            ? <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n            : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n\n          )\n        }\n\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}